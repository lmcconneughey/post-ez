generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String      @unique()
  userName    String      @unique()
  displayName String?
  img         String?
  cover       String?
  bio         String?
  location    String?
  job         String?
  website     String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  Post        Post[]
  Like        Like[]
  SavedPost   SavedPost[]
  followers   Follow[]    @relation("UserFollowers")
  following   Follow[]    @relation("UserFollowing")
}

model Post {
  id           String      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  desc         String?
  name         String
  img          String?
  video        String?
  isSensitive  Boolean     @default(false)
  userId       String      @db.Uuid
  repostId     String?     @db.Uuid
  repost       Post?       @relation("Reposts", fields: [repostId], references: [id])
  user         User        @relation(fields: [userId], references: [id])
  reposts      Post[]      @relation("Reposts")
  parentPostId String?     @db.Uuid
  parentPost   Post?       @relation("PostComments", fields: [parentPostId], references: [id])
  postId       String?     @db.Uuid
  comments     Post[]      @relation("PostComments")
  Like         Like[]
  SavedPost    SavedPost[]
}

model Like {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  userId    String   @db.Uuid
  postId    String   @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])

  @@unique([userId, postId])
  @@index([userId])
  @@index([postId])
}

model SavedPost {
  id        String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt DateTime @default(now())
  userId    String   @db.Uuid
  postId    String   @db.Uuid
  user      User     @relation(fields: [userId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])

  @@unique([userId, postId])
  @@index([userId])
  @@index([postId])
}

model Follow {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt   DateTime @default(now())
  followerId  String   @db.Uuid
  followingId String   @db.Uuid
  follower    User     @relation("UserFollowers", fields: [followerId], references: [id])
  following   User     @relation("UserFollowing", fields: [followingId], references: [id])
}
